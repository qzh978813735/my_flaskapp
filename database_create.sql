-- 数据库创建脚本
-- 使用MySQL语法

-- 创建ROLE表（角色表）
CREATE TABLE IF NOT EXISTS ROLE (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    description TEXT
);

-- 创建USER表（用户表）
CREATE TABLE IF NOT EXISTS USER (
    id VARCHAR(36) PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    name VARCHAR(100),
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 创建USER_ROLE表（用户角色关联表）
CREATE TABLE IF NOT EXISTS USER_ROLE (
    user_id VARCHAR(36) NOT NULL,
    role_id VARCHAR(36) NOT NULL,
    assigned_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES USER(id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES ROLE(id) ON DELETE CASCADE
);

-- 创建API_TEST_PROJECT表（API测试项目表）
CREATE TABLE IF NOT EXISTS API_TEST_PROJECT (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    owner_id VARCHAR(36) NOT NULL,
    version VARCHAR(20) DEFAULT '1.0.0',
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES USER(id) ON DELETE CASCADE
);

-- 创建TEST_CASE_GROUP表（测试用例组表）
CREATE TABLE IF NOT EXISTS TEST_CASE_GROUP (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    project_id VARCHAR(36) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES API_TEST_PROJECT(id) ON DELETE CASCADE
);

-- 创建TEST_CASE表（测试用例表）
CREATE TABLE IF NOT EXISTS TEST_CASE (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    group_id VARCHAR(36) NOT NULL,
    request_url VARCHAR(255) NOT NULL,
    request_method VARCHAR(10) NOT NULL,
    request_headers JSON,
    request_body JSON,
    expected_response JSON,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (group_id) REFERENCES TEST_CASE_GROUP(id) ON DELETE CASCADE
);

-- 创建TEST_ENVIRONMENT表（测试环境表）
CREATE TABLE IF NOT EXISTS TEST_ENVIRONMENT (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    protocol VARCHAR(10) DEFAULT 'http',
    domain VARCHAR(255) NOT NULL,
    description TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 创建SCHEDULED_TASK表（定时任务表）
CREATE TABLE IF NOT EXISTS SCHEDULED_TASK (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    project_id VARCHAR(36) NOT NULL,
    env_id VARCHAR(36) NOT NULL,
    trigger_type VARCHAR(20) NOT NULL,
    trigger_value VARCHAR(100) NOT NULL,
    next_execution DATETIME,
    notify_wechat BOOLEAN DEFAULT FALSE,
    notify_dingtalk BOOLEAN DEFAULT FALSE,
    notify_email BOOLEAN DEFAULT FALSE,
    notify_only_failure BOOLEAN DEFAULT TRUE,
    description TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES API_TEST_PROJECT(id) ON DELETE CASCADE,
    FOREIGN KEY (env_id) REFERENCES TEST_ENVIRONMENT(id) ON DELETE CASCADE
);

-- 创建TEST_REPORT表（测试报告表）
CREATE TABLE IF NOT EXISTS TEST_REPORT (
    id VARCHAR(36) PRIMARY KEY,
    project_id VARCHAR(36) NOT NULL,
    env_id VARCHAR(36) NOT NULL,
    execution_type VARCHAR(20) NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME,
    total_cases INT NOT NULL DEFAULT 0,
    passed_cases INT NOT NULL DEFAULT 0,
    failed_cases INT NOT NULL DEFAULT 0,
    status VARCHAR(20) DEFAULT 'running',
    detailed_results JSON,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES API_TEST_PROJECT(id) ON DELETE CASCADE,
    FOREIGN KEY (env_id) REFERENCES TEST_ENVIRONMENT(id) ON DELETE CASCADE
);

-- 创建EMAIL_CONFIG表（邮件配置表）
CREATE TABLE IF NOT EXISTS EMAIL_CONFIG (
    id VARCHAR(36) PRIMARY KEY,
    user_id VARCHAR(36) NOT NULL,
    sender_email VARCHAR(100) NOT NULL,
    sender_name VARCHAR(100),
    smtp_server VARCHAR(100) NOT NULL,
    smtp_port INT NOT NULL,
    smtp_ssl BOOLEAN DEFAULT TRUE,
    smtp_username VARCHAR(100) NOT NULL,
    smtp_password VARCHAR(255) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USER(id) ON DELETE CASCADE
);

-- 创建EMAIL_RECIPIENT表（邮件收件人表）
CREATE TABLE IF NOT EXISTS EMAIL_RECIPIENT (
    id VARCHAR(36) PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    recipient_type VARCHAR(20) DEFAULT 'to',
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 创建MOCK_DATA表（MOCK数据表）
CREATE TABLE IF NOT EXISTS MOCK_DATA (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    path VARCHAR(255) NOT NULL,
    method VARCHAR(10) NOT NULL,
    response_body JSON,
    response_status INT DEFAULT 200,
    response_headers JSON,
    description TEXT,
    created_by VARCHAR(36) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES USER(id) ON DELETE CASCADE
);

-- 创建DATABASE_CONFIG表（数据库配置表）
CREATE TABLE IF NOT EXISTS DATABASE_CONFIG (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    type VARCHAR(50) NOT NULL,
    description TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 创建DB_CONNECTION表（数据库连接表）
CREATE TABLE IF NOT EXISTS DB_CONNECTION (
    id VARCHAR(36) PRIMARY KEY,
    db_id VARCHAR(36) NOT NULL,
    env_id VARCHAR(36) NOT NULL,
    host VARCHAR(100) NOT NULL,
    port INT NOT NULL,
    user VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    db_name VARCHAR(100) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (db_id) REFERENCES DATABASE_CONFIG(id) ON DELETE CASCADE,
    FOREIGN KEY (env_id) REFERENCES TEST_ENVIRONMENT(id) ON DELETE CASCADE
);

-- 添加索引以提高查询性能
CREATE INDEX idx_user_username ON USER(username);
CREATE INDEX idx_user_email ON USER(email);
CREATE INDEX idx_api_project_owner ON API_TEST_PROJECT(owner_id);
CREATE INDEX idx_test_case_group_project ON TEST_CASE_GROUP(project_id);
CREATE INDEX idx_test_case_group ON TEST_CASE(group_id);
CREATE INDEX idx_scheduled_task_project ON SCHEDULED_TASK(project_id);
CREATE INDEX idx_scheduled_task_env ON SCHEDULED_TASK(env_id);
CREATE INDEX idx_test_report_project ON TEST_REPORT(project_id);
CREATE INDEX idx_test_report_env ON TEST_REPORT(env_id);
CREATE INDEX idx_email_config_user ON EMAIL_CONFIG(user_id);
CREATE INDEX idx_mock_data_created_by ON MOCK_DATA(created_by);
CREATE INDEX idx_db_connection_db ON DB_CONNECTION(db_id);
CREATE INDEX idx_db_connection_env ON DB_CONNECTION(env_id);